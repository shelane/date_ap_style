<?php

/**
* Implements hook_field_formatter_info().
*/

function ap_style_date_field_formatter_info() {
    return array(
        'ap_date' => array(
          'label' => t('AP Style Date'),
          'description' => t('Displays a date as AP Style.'),
          'field types' => array('date', 'datestamp', 'datetime'),
          'settings' => array('use_today' => TRUE, 'cap_today' => TRUE, 'use_year' => TRUE ),
      ),
    );
}

/**
 * Implements hook_field_formatter_view().
 */
function ap_style_date_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
    $element = array();
    $settings = $display['settings'];
    switch ($display['type']) {
        case 'ap_date':
            foreach ($items as $delta => $item) {
                $element[$delta] = array('#markup' => ap_style_date_ap_date_string($item['value'], $settings));
            }
        break;
    }
     return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function ap_style_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $element = array();
  if ($display['type'] == 'ap_date') {
    $element['use_today'] = array(
      '#type' => 'checkbox',
      '#title' => t('Use Today'),
      // '#options' => array(TRUE => 'Today\'s date as Today', FALSE => 'Today\'s date as regular ap style'),
      // '#default_value' => $settings['use_today'],
      // '#description' => t('Use colloquial text version of "Today"'),
    );
    $element['cap_today'] = array(
      '#type' => 'checkbox',
      '#title' => t('Capitalize Today'),
      // '#options' => array(TRUE => 'Today', FALSE => 'today'),
      // '#default_value' => $settings['cap_today'],
      // '#description' => t('Capitalize the word Today'),
    );
    $element['use_year'] = array(
      '#type' => 'checkbox',
      '#title' => t('Use Year'),
      // '#options' => array(TRUE => 'Use year', FALSE => 'Do not use year'),
      // '#default_value' => $settings['use_year'],
      // '#description' => t('You can elect to not add the year to the end of the date'),
    );
  }
  return $element;
}

/**
 * Creates an AP Style formatted date string from a date string.
 *
 * @todo: Turn the variables $use_today, $cap_today, and $use_year into actual
 * field formatter settings that can be enabled/disabled in the Field UI and
 * pass them in dynamically.
 *
 * @param $date_string
 *   A string that can be interpreted by strtotime().
 *
 * @return
 *   An AP Style formatted date string.
 */

function ap_style_date_ap_date_string($date_string, $settings){
  $input_datetime = strtotime($date_string);
  $ap_string = '';

  // TODO: Turn these into actual field formatter settings.
  $use_today = $settings['use_today'];
  $cap_today = $settings['cap_today'];
  $use_year = $settings['use_year'];

  // Determine the month and set the AP Style abbreviation.
  $input_month = date('m', $input_datetime);
  $ap_month = '';
  switch ($input_month) {
    case '01':
      $ap_month = 'Jan.';
      break;
    case '02':
      $ap_month = 'Feb.';
      break;
    case '08':
      $ap_month = 'Aug.';
      break;
    case '09':
      $ap_month = 'Sept.';
      break;
    case '10':
      $ap_month = 'Oct.';
      break;
    case '11':
      $ap_month = 'Nov.';
      break;
    case '12':
      $ap_month = 'Dec.';
      break;
    default:
      $ap_month = date('F', $input_datetime);
  }

  // Determine whether the date is within the current year.
  $input_year = date('Y', $input_datetime);
  $ap_year = '';
  if ($input_year != date('Y') || $use_year) {
    $ap_year = ', ' . $input_year;
  }

  // Determine whether the date is the current date and set the final output.
  $today = strtotime('today');
  if ($input_datetime == $today && $use_today) {
    $ap_string = $cap_today ? 'Today' : 'today';
  }
  else {
    $ap_string = $ap_month . ' ' . date('j', $input_datetime) . $ap_year;
  }

  return $ap_string;
}